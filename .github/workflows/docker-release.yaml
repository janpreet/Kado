name: Build, Docker, and Release

on:
  push:
    branches:
      - main
      - 'feature/*'
      - 'fix/*'

env:
  VERSION_FILE: VERSION
  DOCKER_IMAGE: ghcr.io/${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.22.x'

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Bump version
        run: make version-bump

      - name: Read version
        id: version
        run: echo "VERSION=$(cat $VERSION_FILE)" >> $GITHUB_OUTPUT

      - name: Run tests
        run: go test ./...

      - name: Build for ${{ matrix.goos }}-${{ matrix.goarch }}
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          go build -o kado-${{ matrix.goos }}-${{ matrix.goarch }}
          if [ "${{ matrix.goos }}" = "windows" ]; then
            mv kado-${{ matrix.goos }}-${{ matrix.goarch }} kado-${{ matrix.goos }}-${{ matrix.goarch }}.exe
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: kado-binaries
          path: kado-*

  docker:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

      - name: Read version
        id: version
        run: echo "VERSION=$(cat $VERSION_FILE)" >> $GITHUB_OUTPUT

      - name: Build Docker image
        run: make docker-build

      - name: Push Docker image to GitHub Packages
        run: |
          docker push ${{ env.DOCKER_IMAGE }}:latest
          docker push ${{ env.DOCKER_IMAGE }}:${{ steps.version.outputs.VERSION }}

  release:
    needs:
      - build
      - docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Read version
        id: version
        run: echo "VERSION=$(cat $VERSION_FILE)" >> $GITHUB_OUTPUT

      - name: Download all artifacts
        uses: actions/download-artifact@v2
        with:
          name: kado-binaries
          path: artifacts

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.VERSION }}
          name: Release ${{ steps.version.outputs.VERSION }}
          files: artifacts/kado-*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}